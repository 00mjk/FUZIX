name: C/C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  M68K_CROSS_URL: https://mirrors.edge.kernel.org/pub/tools/crosstool/files/bin/x86_64/11.1.0/x86_64-gcc-11.1.0-nolibc-m68k-linux.tar.gz
  M68K_CROSS_DIR: gcc-11.1.0-nolibc

concurrency: 
  group: environment-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  build-dragon-nx32:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: install build deps
      run: |
        sudo add-apt-repository -n -y ppa:p-pisati/fuzix
        sudo apt-get update -q
        sudo apt-get install -y lwtools gcc6809
        sudo apt-get install -y byacc automake
        sudo update-alternatives --set yacc /usr/bin/byacc
    - name: make
      run: make TARGET=dragon-nx32 -j`nproc`

  build-multicomp09:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: install build deps
      run: |
        sudo add-apt-repository -n -y ppa:p-pisati/fuzix
        sudo apt-get update -q
        sudo apt-get install -y lwtools gcc6809
        sudo apt-get install -y byacc automake
        sudo update-alternatives --set yacc /usr/bin/byacc
    - name: make
      run: make TARGET=multicomp09 -j`nproc`

  build-sbcv2:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: install build deps
      run: |
        sudo apt-get update -q
        sudo apt-get install -y sdcc
        sudo apt-get install -y byacc automake
        sudo update-alternatives --set yacc /usr/bin/byacc
    - name: make
      run: make TARGET=sbcv2 kernel -j`nproc`

  build-sc108:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: install build deps
      run: |
        sudo apt-get update -q
        sudo apt-get install -y sdcc
        sudo apt-get install -y byacc automake
        sudo update-alternatives --set yacc /usr/bin/byacc
    - name: make
      run: make TARGET=sc108 kernel -j`nproc`

  build-n8vem-mark4:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: install build deps
      run: |
        sudo apt-get update -q
        sudo apt-get install -y sdcc
        sudo apt-get install -y byacc automake
        sudo update-alternatives --set yacc /usr/bin/byacc
    - name: make
      run: make TARGET=n8vem-mark4 kernel -j`nproc`

  build-rc2014-6502:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: install build deps
      run: |
        sudo apt-get update -q
        sudo apt-get install -y cc65
        sudo apt-get install -y byacc automake
        sudo update-alternatives --set yacc /usr/bin/byacc
    - name: make
      run: make TARGET=rc2014-6502 -j`nproc`

  build-rc2014-68008:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: install build deps
      run: |
        sudo apt-get update -q
        sudo apt-get install -y byacc automake
        sudo update-alternatives --set yacc /usr/bin/byacc
        wget -O - "${M68K_CROSS_URL}" | sudo tar zxvf - -C /usr/local
    - name: update env
      run: echo "/usr/local/${M68K_CROSS_DIR}/m68k-linux/bin" >> $GITHUB_PATH
    - name: make
      run: make CROSS_COMPILE=m68k-linux- TARGET=rc2014-68008 -j`nproc`

  build-tiny68k:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: install build deps
      run: |
        sudo apt-get update -q
        sudo apt-get install -y byacc automake
        sudo update-alternatives --set yacc /usr/bin/byacc
        wget -O - "${M68K_CROSS_URL}" | sudo tar zxvf - -C /usr/local
    - name: update env
      run: echo "/usr/local/${M68K_CROSS_DIR}/m68k-linux/bin" >> $GITHUB_PATH
    - name: make
      run: make CROSS_COMPILE=m68k-linux- TARGET=tiny68k -j`nproc`

  build-rpipico:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: install build deps
      run: |
        sudo apt-get update -q
        sudo apt-get install -y cmake gcc-arm-none-eabi libnewlib-arm-none-eabi libstdc++-arm-none-eabi-newlib
    - name: make kernel
      run: make TARGET=rpipico kernel -j`nproc`

  build-esp8266:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: install build deps
      run: |
        sudo apt-get update -q
        sudo apt-get install -y gcc-xtensa-lx106 esptool
    - name: make kernel
      run: make -C Kernel TARGET=esp8266 -j`nproc` FUZIX_ROOT=$PWD
    - name: make libraries
      run: |
        make TARGET=esp8266 -j`nproc`

  build-z80-libc:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: install build deps
      run: |
        sudo apt-get update -q
        sudo apt-get install -y sdcc
        sudo apt-get install -y byacc automake
        sudo update-alternatives --set yacc /usr/bin/byacc
    - name: make
      run: make USERCPU=z80 libs -j`nproc`

  build-armm0-libc:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: install build deps
      run: |
        sudo apt-get update -q
        sudo apt-get install -y sdcc
        sudo apt-get install -y byacc automake
        sudo update-alternatives --set yacc /usr/bin/byacc
    - name: make
      run: make USERCPU=armm0 libs -j`nproc`


