Initial sketches for a 6502 RC2014 banked memory platform

Use a modern cc65 from https://github.com/cc65/cc65

Our memory mapping looks like this

	0x0000-0x00FF	ZP
	0x0100-0x01FF	6502 Stack (per proc)
	0x0200-0xBFFF	Process space / Kernel banked
	0xC000-0xFFFF	Kernel common and vectors

	0xC000		udata + C kstack 
	0xC200		C istack
	0xC300		Kernel common



Challenges:

On a system call and IRQ entry we need to switch the low 16K bank and thus
ZP and S correctly

On an interrupt we need to save the full map probably (right now just remember
whole thing) and switch ZP and S properly back and forth as well as pre-empt

For user access we have the fun of doing block copies to/from the low 16K user
space in which case our ZP and S flip on us. Alternatively do we do it by
bank mapping into say $8000 to avoid that but have to handle edge cases and
IRQ trouble.

Alternative is to put common low and share ZP and S which gives us a different
set of problems.
