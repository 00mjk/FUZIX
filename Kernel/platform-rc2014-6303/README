Initial code  for a 6303 RC2014 banked memory platform

Proposed memory mapping

	0x0000-0x00FF	Direct page
	0x0100-0x03FF	Loader space for now (can be reclaimed later)
	0x0400-0xF7FF	Kernel
	0xF800-0xFDFF	Common data and whatever code fills the rest
	0xFE00-0xFEFF	I/O
	0xFF00-0xFFEF
	0xFFF0-0xFFFF	Vectors

Everything we need to copy to/from userspace lives above C000

In user space

	0x0000-0x00FF	Direct page
	0x0100-0x03FF	Loader space for now (can be reclaimed later)
	0x0400-0xF7FF	User space
	0xF800-0xFDFF	Common data and whatever code fills the rest
	0xFE00-0xFEFF	I/O
	0xFF00-0xFFEF
	0xFFF0-0xFFFF	Vectors

Hardware Arrangement

6303 CPU
FE00-FEFF hardwired as an I/O window that generates Z80 I/O cycles 0-FF on the
RC2014 bus
512K RAM/ROM
Internal UART

Things to address
- Switch memory model but do we go with
	- 8K/56K MMU card and 512K flat
	- 16K banked 512K card
	- Flat card and drive A16-A19 off the Port 1 I/O pins
	  (if possible)
- Implement/debug fork() for it
- SPI bitbang port
- Making the UART driver properly IRQ driven for input with its own buffer
  and separate to the Fuzix level interrupts
- Proper two level interrupt handling so that the timer drives Fuzix and
  the other stuff is queued
- Don't disable all interrupts in the Fuzix paths
- Add device support for some of the RC2014 external devices

Put the loader on sector 0
Put the kernel on sector 1+
