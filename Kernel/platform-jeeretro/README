An UZI target for the JeeLabs Retro Z80 emulator.

JeeRetro is configered with a simple 4K fixed common and 60K fixed sized banks.
We run FUZIX with one application per bank and the memory map currently is

Bank 0:

0000-0080	Vectors
0081-0084	Saved CP/M command info
0088		UZI kernel start
????		UZI kernel end ~= A000
(big kernels go up to E400 or so!)
no discard area, current kernel easily fits in 60K
End of kernel:	Common >= 0xF000
		uarea
		uarea stack
		interrupt stack
		bank switching code
		user memory access copy
		interrupt vectors and glue
		[Possibly future move the buffers up here to allow for more
		 disk and inode buffer ?]
FFFF		Hard end of kernel room

Bank 1 to Bank n:
0000		Vector copy
0080		free
0100		Application
ECFF		Application end
ED00-EFFF	uarea stash

Disk swap device is needed due to limited number of user banks

Disk layout depends on the emulator configuration
One option is to put the kernel at block 1, and the fs starting at block 2048
This is compatible with a possible future use of MBR partitioning

dd the kernel image to block offset 1
dd the filesystem image to block offset 2048

ie

dd if=fuzix.bin of=drivea.cpm bs=512 seek=1 conv=notrunc
dd if=rootfs.img of=drivea.cpm bs=512 seek=2048 conv=notrunc

See <https://jeelabs.org/2018/z80-zexall-f407/> for further Jee Retro details.
